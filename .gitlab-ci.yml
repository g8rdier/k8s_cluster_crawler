image: python:3.9  # Use a Python image with necessary tools

stages:
  - validate
  - build

# Überprüfen des Shell-Skripts
lint:
  stage: validate
  allow_failure: true
  variables:
    SHELLCHECK_OPTS: ""
  script:
    - apt-get update && apt-get install -y shellcheck
    - shellcheck scripts/cluster_crawler.sh
  - shellcheck -e SC2034,SC2086 scripts/cluster_crawler.sh


collect_data:
  stage: build
  variables:
    GIT_SSL_NO_VERIFY: "true"  # If necessary for your environment
  script:
    # Install necessary tools
    - apt-get update && apt-get install -y curl jq git

    # Install kubectl
    - KUBECTL_VERSION="v1.28.0"
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/kubectl
    - kubectl version --client  

    # Install Python dependencies
    - pip install --no-cache-dir tabulate

    # Set up Kubernetes config
    - mkdir -p ~/.kube
    - echo "$KUBE_CONFIG_DATA" > ~/.kube/config
    - chmod 600 ~/.kube/config
    - kubectl config view

    # Ensure scripts are executable
    - chmod +x scripts/cluster_crawler.sh
    - chmod +x parser.py

    # Run the cluster crawler script
    - ./scripts/cluster_crawler.sh

  # Define necessary environment variables
  variables:
    PUSH_BOM_PAGES: "$PUSH_BOM_PAGES"  # Ensure this variable is set in CI/CD variables
